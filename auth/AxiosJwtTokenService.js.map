{"version":3,"file":"AxiosJwtTokenService.js","names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","_catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","_createClass","protoProps","staticProps","_toPrimitive","String","input","hint","prim","toPrimitive","res","Number","Cookies","jwtDecode","axios","logFrontendAuthError","processAxiosErrorAndThrow","createRetryInterceptor","AxiosJwtTokenService","loggingService","tokenCookieName","tokenRefreshEndpoint","httpClient","defaults","withCredentials","interceptors","response","use","cookies","refreshRequestPromises","getHttpClient","decodeJwtCookie","cookieValue","get","e","message","customAttributes","refresh","_this","responseServerEpochSeconds","makeRefreshRequest","_ref","_callee","axiosResponse","userIsUnauthenticated","_decodedJwtToken","browserEpochSeconds","browserDriftSeconds","decodedJwtToken","_callee$","_context","post","data","response_epoch_seconds","t0","t1","status","remove","Date","now","Math","abs","_getJwtToken","_callee2","forceRefresh","_args2","_callee2$","_context2","isTokenExpired","getJwtToken","token","exp","default"],"sources":["../../src/auth/AxiosJwtTokenService.js"],"sourcesContent":["import Cookies from 'universal-cookie';\nimport jwtDecode from 'jwt-decode';\nimport axios from 'axios';\nimport { logFrontendAuthError, processAxiosErrorAndThrow } from './utils';\nimport createRetryInterceptor from './interceptors/createRetryInterceptor';\n\nexport default class AxiosJwtTokenService {\n  static isTokenExpired(token) {\n    return !token || token.exp < Date.now() / 1000;\n  }\n\n  constructor(loggingService, tokenCookieName, tokenRefreshEndpoint) {\n    this.loggingService = loggingService;\n    this.tokenCookieName = tokenCookieName;\n    this.tokenRefreshEndpoint = tokenRefreshEndpoint;\n\n    this.httpClient = axios.create();\n    // Set withCredentials to true. Enables cross-site Access-Control requests\n    // to be made using cookies, authorization headers or TLS client\n    // certificates. More on MDN:\n    // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n    this.httpClient.defaults.withCredentials = true;\n    // Add retries to this axios instance\n    this.httpClient.interceptors.response.use(\n      response => response,\n      createRetryInterceptor({ httpClient: this.httpClient }),\n    );\n\n    this.cookies = new Cookies();\n    this.refreshRequestPromises = {};\n  }\n\n  getHttpClient() {\n    return this.httpClient;\n  }\n\n  decodeJwtCookie() {\n    const cookieValue = this.cookies.get(this.tokenCookieName);\n\n    if (cookieValue) {\n      try {\n        return jwtDecode(cookieValue);\n      } catch (e) {\n        const error = Object.create(e);\n        error.message = 'Error decoding JWT token';\n        error.customAttributes = { cookieValue };\n        throw error;\n      }\n    }\n\n    return null;\n  }\n\n  refresh() {\n    let responseServerEpochSeconds = 0;\n\n    if (this.refreshRequestPromises[this.tokenCookieName] === undefined) {\n      const makeRefreshRequest = async () => {\n        let axiosResponse;\n        try {\n          try {\n            axiosResponse = await this.httpClient.post(this.tokenRefreshEndpoint);\n            // eslint-disable-next-line max-len\n            if (axiosResponse.data && axiosResponse.data.response_epoch_seconds) {\n              responseServerEpochSeconds = axiosResponse.data.response_epoch_seconds;\n            }\n          } catch (error) {\n            processAxiosErrorAndThrow(error);\n          }\n        } catch (error) {\n          const userIsUnauthenticated = error.response && error.response.status === 401;\n          if (userIsUnauthenticated) {\n            // Clean up the cookie if it exists to eliminate any situation\n            // where the cookie is not expired but the jwt is expired.\n            this.cookies.remove(this.tokenCookieName);\n            const decodedJwtToken = null;\n            return decodedJwtToken;\n          }\n\n          // TODO: Network timeouts and other problems will end up in\n          // this block of code. We could add logic for retrying token\n          // refreshes if we wanted to.\n          throw error;\n        }\n\n        const browserEpochSeconds = Date.now() / 1000;\n        const browserDriftSeconds = responseServerEpochSeconds > 0\n          ? Math.abs(browserEpochSeconds - responseServerEpochSeconds)\n          : null;\n\n        const decodedJwtToken = this.decodeJwtCookie();\n\n        if (!decodedJwtToken) {\n          // This is an unexpected case. The refresh endpoint should set the\n          //   cookie that is needed.\n          // For more details, see:\n          //   docs/decisions/0005-token-null-after-successful-refresh.rst\n          const error = new Error('Access token is still null after successful refresh.');\n          error.customAttributes = { axiosResponse, browserDriftSeconds, browserEpochSeconds };\n          throw error;\n        }\n\n        return decodedJwtToken;\n      };\n\n      this.refreshRequestPromises[this.tokenCookieName] = makeRefreshRequest().finally(() => {\n        delete this.refreshRequestPromises[this.tokenCookieName];\n      });\n    }\n\n    return this.refreshRequestPromises[this.tokenCookieName];\n  }\n\n  async getJwtToken(forceRefresh = false) {\n    try {\n      const decodedJwtToken = this.decodeJwtCookie(this.tokenCookieName);\n      if (!AxiosJwtTokenService.isTokenExpired(decodedJwtToken) && !forceRefresh) {\n        return decodedJwtToken;\n      }\n    } catch (e) {\n      // Log unexpected error and continue with attempt to refresh it.\n      // TODO: Fix these.  They're still using loggingService as a singleton.\n      logFrontendAuthError(this.loggingService, e);\n    }\n\n    try {\n      return await this.refresh();\n    } catch (e) {\n      // TODO: Fix these.  They're still using loggingService as a singleton.\n      logFrontendAuthError(this.loggingService, e);\n      throw e;\n    }\n  }\n}\n"],"mappings":"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"}